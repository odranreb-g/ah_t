name: CI Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.2
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: ah_t_user
          POSTGRES_DB: ah_car_system
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest ah_t --cov=ah_t/ --cov-report=xml
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: ah_t_user
          POSTGRES_DB: ah_car_system
          POSTGRES_HOST: localhost
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - name: Run Flake8
        run: poetry run flake8 . --max-line-length 110
      - name: Run Black
        run: poetry run black . --check
      - name: Run Isort
        run: poetry run isort . --check-only
      - name: Run Bandit
        run: poetry run bandit .
      - name: Run saftey
        run: poetry run safety check -i 42194
